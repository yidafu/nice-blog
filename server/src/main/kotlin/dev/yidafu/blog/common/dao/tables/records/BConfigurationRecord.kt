/*
 * This file is generated by jOOQ.
 */
package dev.yidafu.blog.common.dao.tables.records


import dev.yidafu.blog.common.dao.tables.BConfiguration

import java.time.LocalTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BConfigurationRecord() : UpdatableRecordImpl<BConfigurationRecord>(BConfiguration.B_CONFIGURATION) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var configkey: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var configvalue: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var createdAt: LocalTime?
        set(value): Unit = set(3, value)
        get(): LocalTime? = get(3) as LocalTime?

    open var updatedAt: LocalTime?
        set(value): Unit = set(4, value)
        get(): LocalTime? = get(4) as LocalTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised BConfigurationRecord
     */
    constructor(id: Long? = null, configkey: String? = null, configvalue: String? = null, createdAt: LocalTime? = null, updatedAt: LocalTime? = null): this() {
        this.id = id
        this.configkey = configkey
        this.configvalue = configvalue
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetChangedOnNotNull()
    }
}
