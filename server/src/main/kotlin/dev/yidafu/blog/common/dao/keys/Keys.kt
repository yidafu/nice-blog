/*
 * This file is generated by jOOQ.
 */
package dev.yidafu.blog.common.dao.keys


import dev.yidafu.blog.common.dao.tables.BArticle
import dev.yidafu.blog.common.dao.tables.BConfiguration
import dev.yidafu.blog.common.dao.tables.BSyncTask
import dev.yidafu.blog.common.dao.tables.BUser
import dev.yidafu.blog.common.dao.tables.BUserToken
import dev.yidafu.blog.common.dao.tables.records.BArticleRecord
import dev.yidafu.blog.common.dao.tables.records.BConfigurationRecord
import dev.yidafu.blog.common.dao.tables.records.BSyncTaskRecord
import dev.yidafu.blog.common.dao.tables.records.BUserRecord
import dev.yidafu.blog.common.dao.tables.records.BUserTokenRecord

import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val CONSTRAINT_C: UniqueKey<BArticleRecord> = Internal.createUniqueKey(BArticle.B_ARTICLE, DSL.name("CONSTRAINT_C"), arrayOf(BArticle.B_ARTICLE.ID), true)
val CONSTRAINT_2: UniqueKey<BConfigurationRecord> = Internal.createUniqueKey(BConfiguration.B_CONFIGURATION, DSL.name("CONSTRAINT_2"), arrayOf(BConfiguration.B_CONFIGURATION.ID), true)
val UKR9EYOBGIOQOJSDRAYEEYMUNJH: UniqueKey<BConfigurationRecord> = Internal.createUniqueKey(BConfiguration.B_CONFIGURATION, DSL.name("UKR9EYOBGIOQOJSDRAYEEYMUNJH"), arrayOf(BConfiguration.B_CONFIGURATION.CONFIG_KEY), true)
val CONSTRAINT_CF: UniqueKey<BSyncTaskRecord> = Internal.createUniqueKey(BSyncTask.B_SYNC_TASK, DSL.name("CONSTRAINT_CF"), arrayOf(BSyncTask.B_SYNC_TASK.ID), true)
val CONSTRAINT_7: UniqueKey<BUserRecord> = Internal.createUniqueKey(BUser.B_USER, DSL.name("CONSTRAINT_7"), arrayOf(BUser.B_USER.ID), true)
val UK_9X6TW7BOCI1EVWR46R5OMOUKA: UniqueKey<BUserRecord> = Internal.createUniqueKey(BUser.B_USER, DSL.name("UK_9X6TW7BOCI1EVWR46R5OMOUKA"), arrayOf(BUser.B_USER.USERNAME), true)
val CONSTRAINT_3: UniqueKey<BUserTokenRecord> = Internal.createUniqueKey(BUserToken.B_USER_TOKEN, DSL.name("CONSTRAINT_3"), arrayOf(BUserToken.B_USER_TOKEN.ID), true)
val UK_1D63EUQ1SRIUU4GWDPQHR6559: UniqueKey<BUserTokenRecord> = Internal.createUniqueKey(BUserToken.B_USER_TOKEN, DSL.name("UK_1D63EUQ1SRIUU4GWDPQHR6559"), arrayOf(BUserToken.B_USER_TOKEN.TOKEN), true)
